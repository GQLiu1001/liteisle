<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liteisle.mapper.FoldersMapper">

    <resultMap id="BaseResultMap" type="com.liteisle.common.domain.Folders">
            <id property="id" column="id" />
            <result property="userId" column="user_id" />
            <result property="parentId" column="parent_id" />
            <result property="folderName" column="folder_name" />
            <result property="folderType" column="folder_type" />
            <result property="sortedOrder" column="sorted_order" />
            <result property="deleteTime" column="delete_time" />
            <result property="createTime" column="create_time" />
            <result property="updateTime" column="update_time" />
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,parent_id,folder_name,folder_type,sorted_order,
        delete_time,create_time,update_time
    </sql>
    <select id="selectFoldersWithCount" resultType="com.liteisle.common.domain.Folders">
        SELECT
            f.*,
            (SELECT COUNT(*)
             FROM files file
             WHERE file.folder_id = f.id
               AND file.user_id = #{userId}
               AND file.file_name LIKE CONCAT('%', #{content}, '%')
               AND file.delete_time IS NULL
            ) AS subCount
        FROM folders f
        WHERE
            f.user_id = #{userId}
          AND f.folder_type = #{type}
          AND f.delete_time IS NULL
        ORDER BY f.sorted_order DESC
    </select>
    <select id="selectFolders" resultType="com.liteisle.common.domain.Folders">
        SELECT
            f.*,
            COUNT(file.id) AS subCount  -- 直接统计所有文件
        FROM folders f
                 LEFT JOIN files file
                           ON f.id = file.folder_id
                               AND file.user_id = #{userId}
                               AND file.delete_time IS NULL
        WHERE
            f.user_id = #{userId}
          AND f.folder_type = #{type}
          AND f.delete_time IS NULL
        GROUP BY f.id
        ORDER BY f.sorted_order DESC
    </select>
    <select id="getRecycleBinViewWithContent" resultType="com.liteisle.common.dto.response.RecycleBinContentResp$FolderItem">
        select
        f.id as originalId,
        f.folder_name as originalName,
        f.folder_type as originalType,
        f.delete_time as deleteTime,
        DATE_ADD(f.delete_time, INTERVAL 30 DAY) as expireTime,
        -- 使用 count(fi.id) 来统计文件数量
        count(fi.id) as subCount
        from
        folders f
        left join
        files fi on f.id = fi.folder_id
        where
        f.delete_time is not null
        and f.user_id = #{userId}
        <if test="content != null and content != ''">
            and f.folder_name like concat('%', #{content}, '%')
        </if>
        group by
        f.id, f.folder_name, f.folder_type, f.delete_time
        order by
        f.delete_time desc
    </select>

    <select id="getFolderContentWithSort"
            resultType="com.liteisle.common.dto.response.FolderContentResp$FolderItem">
        select
        f.id,
        f.folder_name,
        f.folder_type,
        f.sorted_order,
        f.create_time,
        f.update_time,
        -- 高效地计算子项目总数（文件夹 + 文件），并处理空文件夹的情况
        (COALESCE(sub_folders.count, 0) + COALESCE(sub_files.count, 0)) as sub_count
        from
        folders f
        left join
        -- 子查询1: 预先统计每个父文件夹下有多少个子文件夹
        (
        select parent_id, count(*) as count
        from folders
        where delete_time is null
        <if test="content != null and content != ''"> -- 使用 and content != '' 更严谨
            and folder_name like concat('%', #{content}, '%')
        </if>
        group by parent_id
        ) as sub_folders
        on f.id = sub_folders.parent_id
        left join
        -- 子查询2: 预先统计每个文件夹下有多少个文件
        (
        select folder_id, count(*) as count
        from files
        where delete_time is null
        and file_status = 'available'
        <if test="content != null and content != ''"> -- 使用 and content != '' 更严谨
            and file_name like concat('%', #{content}, '%')
        </if>
        group by folder_id
        ) as sub_files
        on f.id = sub_files.folder_id
        where
        f.delete_time is null
        and f.parent_id = #{folderId}
        and f.user_id = #{userId}
        <if test="content != null and content != ''"> -- 使用 and content != '' 更严谨
            and f.folder_name like concat('%', #{content}, '%')
        </if>
        order by
        <choose>
            <when test="sortBy == 'name'">
                f.folder_name ${sortOrder}, f.id ASC
            </when>
            <when test="sortBy == 'create_time'">
                f.create_time ${sortOrder}, f.id ASC
            </when>
            <when test="sortBy == 'update_time'">
                f.update_time ${sortOrder}, f.id ASC
            </when>
            <otherwise>
                f.sorted_order ${sortOrder}, f.id ASC
            </otherwise>
        </choose>
    </select>

</mapper>
