<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liteisle.mapper.FilesMapper">

    <resultMap id="BaseResultMap" type="com.liteisle.common.domain.Files">
            <id property="id" column="id" />
            <result property="userId" column="user_id" />
            <result property="folderId" column="folder_id" />
            <result property="storageId" column="storage_id" />
            <result property="fileName" column="file_name" />
            <result property="fileExtension" column="file_extension" />
            <result property="fileType" column="file_type" />
            <result property="fileStatus" column="file_status" />
            <result property="sortedOrder" column="sorted_order" />
            <result property="deleteTime" column="delete_time" />
            <result property="createTime" column="create_time" />
            <result property="updateTime" column="update_time" />
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,folder_id,storage_id,file_name,file_extension,
        file_type,file_status,sorted_order,delete_time,create_time,
        update_time
    </sql>
    <select id="getMusicViewWithContent"
            resultType="com.liteisle.common.domain.response.MusicViewResp$MusicFile">
        select
        f.id,
        f.folder_id,
        f.file_name,
        f.file_type,
        f.sorted_order,
        m.artist,
        m.album,
        m.duration,
        m.cover_art_url
        from
        files f
        left join music_metadata m on f.id = m.file_id
        where
        f.delete_time is null
        and f.user_id = #{userId}
        <if test="content != null">
            and (
            f.file_name like concat('%', #{content}, '%')
            )
        </if>
    </select>
    <select id="getRecycleBinViewWithContent"
            resultType="com.liteisle.common.domain.response.RecycleBinContentResp$FileItem">
        select
        f.id as original_id,
        f.file_name as original_name,
        f.file_type as original_type,
        s.file_size,
        f.delete_time,
        -- 动态计算 expire_time
        -- DATE_ADD 是 MySQL 的函数，将 delete_time 加上30天
        DATE_ADD(f.delete_time, INTERVAL 30 DAY) as expire_time
        from
        files f left join storages s on f.storage_id = s.id
        where
        f.delete_time is not null
        and f.user_id = #{userId}
        <if test="content != null">
            and f.file_name like concat('%', #{content}, '%')
        </if>
    </select>
    <!-- File Mapper XML (例如: FilesMapper.xml) -->
    <select id="getFolderContentWithSort" resultType="com.liteisle.common.domain.response.FolderContentResp$FileItem">
        select
        f.id,
        f.folder_id,
        f.file_name,
        f.file_type,
        f.file_status,
        f.sorted_order,
        f.create_time,
        f.update_time,
        s.file_size
        from
        files f left join storages s on f.storage_id = s.id
        where
        f.delete_time is null
        and f.folder_id = #{folderId}
        and f.user_id = #{userId}
        <if test="content != null and content != ''">
            -- 新增的搜索条件：文件名模糊匹配
            and f.file_name like concat('%', #{content}, '%')
        </if>
        order by
        <choose>
            <when test="sortBy == 'name'">
                f.file_name ${sortOrder}, f.id ASC
            </when>
            <when test="sortBy == 'file_size'">
                s.file_size ${sortOrder}, f.id ASC
            </when>
            <when test="sortBy == 'create_time'">
                f.create_time ${sortOrder}, f.id ASC
            </when>
            <when test="sortBy == 'update_time'">
                f.update_time ${sortOrder}, f.id ASC
            </when>
            <otherwise>
                f.sorted_order ${sortOrder}, f.id ASC
            </otherwise>
        </choose>
    </select>
    <select id="getTotalSizeByFolderId" resultType="java.lang.Long">
        SELECT SUM(s.file_size)
        FROM files f
                 JOIN storages s ON f.id = s.id
        WHERE f.folder_id = #{folderId}
          AND f.file_status = 'AVAILABLE'
          and f.user_id = #{userId}
          AND f.delete_time IS NULL
    </select>
</mapper>
